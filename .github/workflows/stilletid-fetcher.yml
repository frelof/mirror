name: Stilletid Fetcher

on:
  schedule:
    - cron: '0 12 * * *'   # every day at 12:00 UTC (13:00 CET / 14:00 CEST)
  workflow_dispatch:

permissions:
  contents: write

jobs:
  fetch-stilletid:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Create data directory
        run: mkdir -p data

      - name: Fetch and parse stilletid configuration
        shell: bash
        run: |
          set -euo pipefail
          
          # Fetch the HTML page
          HTML="$(curl -sS https://oslokommune.github.io/utviklingsopplevelser-dashbord/)"
          
          # Extract JavaScript variables using grep and sed
          # Extract startArbeid (in minutes)
          START_ARBEID=$(echo "$HTML" | grep -oP 'startArbeid\s*=\s*\K\d+' | head -1)
          
          # Extract sluttArbeid (in minutes)
          SLUTT_ARBEID=$(echo "$HTML" | grep -oP 'sluttArbeid\s*=\s*\K\d+' | head -1)
          
          # Extract stillePerioder array
          # This is more complex - we need to find the array definition
          STILLE_PERIODER=$(echo "$HTML" | grep -A 5 'stillePerioder\s*=' | grep -oP '\[\d+\*60[^]]+\]' || echo "[]")
          
          # If extraction failed, use defaults
          if [ -z "$START_ARBEID" ]; then START_ARBEID=480; fi
          if [ -z "$SLUTT_ARBEID" ]; then SLUTT_ARBEID=1020; fi
          
          # Parse stille perioder (convert from JS format to JSON)
          # Default quiet periods: 09:15-10:55 and 12:05-14:00
          if [ "$STILLE_PERIODER" = "[]" ]; then
            STILLE_JSON="[[555, 655], [725, 840]]"
          else
            # Try to parse the periods from the HTML
            # This is a simple extraction - may need adjustment
            PERIOD1_START=$(echo "$HTML" | grep -oP '\[9\*60\s*\+\s*\K\d+' | head -1 || echo "15")
            PERIOD1_END=$(echo "$HTML" | grep -oP '10\*60\s*\+\s*\K\d+' | head -1 || echo "55")
            PERIOD2_START=$(echo "$HTML" | grep -oP '\[12\*60\s*\+\s*\K\d+' | head -1 || echo "5")
            PERIOD2_END=$(echo "$HTML" | grep -oP '14\*60\s*\+\s*\K\d+' | head -1 || echo "0")
            
            # Calculate total minutes
            P1_START=$((9*60 + PERIOD1_START))
            P1_END=$((10*60 + PERIOD1_END))
            P2_START=$((12*60 + PERIOD2_START))
            P2_END=$((14*60 + PERIOD2_END))
            
            STILLE_JSON="[[$P1_START, $P1_END], [$P2_START, $P2_END]]"
          fi
          
          # Create JSON output
          cat > data/stilletid.json <<EOF
          {
            "timestamp": "$(date -Is)",
            "startArbeid": $START_ARBEID,
            "sluttArbeid": $SLUTT_ARBEID,
            "stillePerioder": $STILLE_JSON,
            "source": "oslokommune_dashboard"
          }
          EOF
          
          echo "Stilletid configuration updated:"
          cat data/stilletid.json | jq '.'

      - name: Commit and push stilletid data
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add data/stilletid.json
          git diff --staged --quiet || git commit -m "Update stilletid configuration [skip ci]"
          git push

